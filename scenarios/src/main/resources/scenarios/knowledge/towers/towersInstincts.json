{
  "neurons": {
    "possibleMoves": {
      "confidence": "POSITIVE",
      "data": {
        "type": "rule",
        "expressions": [
          {
            "type": "possibleMove",
            "expressions": [
              {
                "type": "act",
                "expressions": [
                  {"value": "move"},
                  {"var": "fromTower"},
                  {"var": "toTower"}
                ]
              }
            ]
          },
          {
            "type": "rel",
            "expressions": [
              {"value": "isa"},
              {"var": "fromTower"},
              {"value": "tower"}
            ]
          },
          {
            "type": "rel",
            "expressions": [
              {"value": "isa"},
              {"var": "toTower!=var:fromTower"},
              {"value": "tower"}
            ]
          }
        ]
      }
    },
    "assumePossibleCanDo": {
      "confidence": "POSITIVE",
      "data": {
        "type": "rule",
        "expressions": [
          {
            "type": "canDo",
            "expressions": [
              {
                "type": "act",
                "expressions": [
                  {"value": "move"},
                  {"var": "fromTower"},
                  {"var": "toTower"}
                ]
              }
            ]
          },
          {
            "type": "possibleMove",
            "expressions": [
              {
                "type": "act",
                "expressions": [
                  {"value": "move"},
                  {"var": "fromTower"},
                  {"var": "toTower"}
                ]
              }
            ]
          }
        ]
      }
    },
    "currentBest": {
      "confidence": "POSITIVE",
      "data": {
        "type": "rule",
        "expressions": [
          {"expression": "current(best(var:canDoAct))"},
          {"expression": "was(best(var:canDoAct))"},
          {"expression": "canDo(var:canDoAct)"}
        ]
      }
    },
    "currentBestUnlessOther": {
      "confidence": "POSITIVE",
      "data": {
        "type": "rule",
        "expressions": [
          {"expression": "not(current(best(var:canDoAct)))"},
          {"expression": "was(best(var:canDoAct))"},
          {"expression": "canDo(var:canDoAct)"},
          {"expression": "current(best(var:other!=var:canDoAct))"}
        ]
      }
    },
    "bestUnlessOther": {
      "confidence": "POSITIVE",
      "data": {
        "type": "rule",
        "expressions": [
          {"expression": "not(act(now, best(var:canDoAct)))"},
          {"expression": "canDo(var:canDoAct)"},
          {"expression": "current(best(var:other!=var:canDoAct))"}
        ]
      }
    },
    "bestDefault": {
      "confidence": "POSITIVE",
      "data": {
        "type": "rule",
        "expressions": [
          {"expression": "act(now, best(var:canDoAct))"},
          {"expression": "canDo(var:canDoAct)"}
        ]
      }
    },
    "doBest": {
      "confidence": "POSITIVE",
      "data": {
        "type": "rule",
        "expressions": [
          {"var": "canDoAct"},
          {
            "type": "current",
            "expressions": [
              {
                "type": "best",
                "expressions": [
                  {"var": "canDoAct"}
                ]
              }
            ]
          }
        ]
      }
    }
  }
}

